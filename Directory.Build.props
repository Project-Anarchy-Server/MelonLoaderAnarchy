<Project>
    <PropertyGroup>
        <Version>0.7.1</Version>
        <Il2CppInteropVersion>1.5.0-ci.625</Il2CppInteropVersion>

        <Authors>Lava Gang</Authors>
        <Company>discord.gg/2Wn3N2P</Company>
        <Copyright>Copyright (c) 2022 Lava Gang</Copyright>

        <LangVersion>Latest</LangVersion>
        <IsPackable>false</IsPackable>
        <Configurations>Debug;Release</Configurations>
        <Platforms>x86;x64</Platforms>
        <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    </PropertyGroup>

    <PropertyGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">
        <RuntimeIdentifiers>linux-x64</RuntimeIdentifiers>
        <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
        <PlatformTarget>x64</PlatformTarget>
        <DefineConstants>$(DefineConstants);LINUX</DefineConstants>
        <LibPrefix>lib</LibPrefix>
        <LibExt>.a</LibExt>
    </PropertyGroup>

    <PropertyGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">
        <!-- TODO: split x64 and arm64 -->
        <RuntimeIdentifiers>osx-x64</RuntimeIdentifiers>
        <RuntimeIdentifier>osx-x64</RuntimeIdentifier>
        <PlatformTarget>x64</PlatformTarget>
        <DefineConstants>$(DefineConstants);OSX</DefineConstants>
        <LibPrefix>lib</LibPrefix>
        <LibExt>.a</LibExt>
    </PropertyGroup>

    <PropertyGroup Condition="'$([MSBuild]::IsOSUnixLike())' == 'false'">
        <RuntimeIdentifiers>win-x64;win-x86</RuntimeIdentifiers>
        <RuntimeIdentifier>win-$(Platform)</RuntimeIdentifier>
        <DefineConstants>$(DefineConstants);WINDOWS</DefineConstants>
        <LibExt>.lib</LibExt>
    </PropertyGroup>

    <PropertyGroup Condition="'$(RuntimeIdentifier.EndsWith(`-x64`))' == 'true'">
        <DefineConstants>$(DefineConstants);X64</DefineConstants>
    </PropertyGroup>

    <PropertyGroup>
        <MLOutDir>$(SolutionDir)/Output/$(Configuration)/$(RuntimeIdentifier)</MLOutDir>
    </PropertyGroup>

    <ItemGroup Condition="'$(TargetFramework)' == 'net35'">
        <ProjectReference Include="$(SolutionDir)/PortablePdbToMdb/PortablePdbToMdb.csproj"
                          ReferenceOutputAssembly="false"
                          SkipGetTargetFrameworkProperties="true"
                          GlobalPropertiesToRemove="TargetFramework" />
    </ItemGroup>
    <UsingTask TaskName="PortablePdbToMdb"
               Condition="'$(TargetFramework)' == 'net35'"
               AssemblyFile="$(SolutionDir)/PortablePdbToMdb/bin/PortablePdbToMdb.dll"
               TaskFactory="TaskHostFactory" />
    <Target Name="SymbolsConvert" Condition="'$(TargetFramework)' == 'net35'" AfterTargets="AfterBuild">
        <PortablePdbToMdb AssemblyPath="$(TargetPath)" />
    </Target>
</Project>
